"use strict";(self.webpackChunkformulaik=self.webpackChunkformulaik||[]).push([[1016],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>f});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(t),p=r,f=d["".concat(s,".").concat(p)]||d[p]||m[p]||i;return t?a.createElement(f,o(o({ref:n},c),{},{components:t})):a.createElement(f,o({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},80076:(e,n,t)=>{t.d(n,{A:()=>s});var a=t(96540),r=t(49489),i=t(7227),o=t(23833),l=t(68316);const s=e=>{const n=e.npm?e.npm:(0,l.A)(e.yarn,"npm"),t=e.yarn?e.yarn:(0,l.A)(e.npm,"yarn");return a.createElement(r.default,null,a.createElement(i.default,{value:"npm",label:"npm",default:!0},a.createElement(o.default,{language:"bash"},n)),a.createElement(i.default,{value:"bash",label:"yarn"},a.createElement(o.default,{language:"bash"},t)))}},5336:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=t(58168),r=(t(96540),t(15680));t(80076);const i={sidebar_position:2},o="Multi inputs",l={unversionedId:"guides/advanced/multi",id:"guides/advanced/multi",title:"Multi inputs",description:"By default Formulaik renders inputs vertically and gives a full width to each one of them.",source:"@site/docs/guides/advanced/3.multi.mdx",sourceDirName:"guides/advanced",slug:"/guides/advanced/multi",permalink:"/documentation/docs/next/guides/advanced/multi",draft:!1,editUrl:"https://github.com/formulaik-core/generator-formulaik/tree/main/packages/create-docusaurus/templates/shared/docs/guides/advanced/3.multi.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Use @loadable in input libraries",permalink:"/documentation/docs/next/guides/advanced/loadable"},next:{title:"Reference",permalink:"/documentation/docs/next/category/reference"}},s={},u=[],c={toc:u},d="wrapper";function m(e){let{components:n,...t}=e;return(0,r.yg)(d,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"multi-inputs"},"Multi inputs"),(0,r.yg)("p",null,"By default Formulaik renders inputs vertically and gives a full width to each one of them.\nWhile this might satisfy most of the use cases, you might want to use a custom layout for specific fields."),(0,r.yg)("p",null,"For instance this code will put the ",(0,r.yg)("inlineCode",{parentName:"p"},"email")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"password")," components on the same row using tailwind:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"const inputs = [\n    {\n      isMulti: true,\n      className: 'flex space-x-2',\n      items: [\n        {\n            component: 'input',\n            id: 'email',\n            label: 'Email',\n            type: \"string\",\n            params: {        \n                placeholder: \"email@domain.com\"\n            },\n            validations: [\n                {\n                kind: \"format\",\n                value: \"email\",\n                message: 'Invalid email format',\n                },\n                {\n                kind: \"required\",\n                value: true,\n                message: \"This field can't be blank\",\n                },\n            ],\n        },\n        {\n            component: 'inputPassword',\n            label: 'Password',\n            id: 'password',\n            type: \"string\",\n            params: {\n                autoComplete: \"current-password\",\n                placeholder: \"xxxx-xxxx-xxxx\"\n            },\n            validations: [\n                {\n                kind: \"required\",\n                value: true,\n                message: \"This field can't be blank\",\n                },\n                {\n                kind: \"matches\",\n                value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/,\n                message: 'Invalid password, must contain at least 8 characters and at most 18 characters',\n                },\n            ]\n        },],\n    },\n    {\n        component: 'checkbox',        \n        id: 'rememberMe',\n        type: \"boolean\",\n        params: {\n            label: 'Remember me',\n        }\n    },\n    {\n      component: 'submit',\n      id: 'submit',\n      params: {\n        text: 'Continue'\n      }\n    },\n]\n")))}m.isMDXComponent=!0}}]);