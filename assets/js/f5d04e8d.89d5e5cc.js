"use strict";(self.webpackChunkformulaik=self.webpackChunkformulaik||[]).push([[8504],{51181:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>d,toc:()=>m});var a=n(45072),t=(n(11504),n(95788));var i=n(51944),s=n.n(i);const l={sidebar_position:6},o="Transformer",d={unversionedId:"reference/transformer",id:"version-1.0/reference/transformer",title:"Transformer",description:"- A transformer's mode can either be display, in or out",source:"@site/versioned_docs/version-1.0/reference/transformer.mdx",sourceDirName:"reference",slug:"/reference/transformer",permalink:"/documentation/docs/reference/transformer",draft:!1,editUrl:"https://github.com/formulaik-core/generator-formulaik/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.0/reference/transformer.mdx",tags:[],version:"1.0",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Validator",permalink:"/documentation/docs/reference/validator"},next:{title:"Side Effect",permalink:"/documentation/docs/reference/sideeffect"}},p={},m=[{value:"Modes",id:"modes",level:3},{value:"In",id:"in",level:4},{value:"Out",id:"out",level:4},{value:"Display",id:"display",level:4},{value:"Usage",id:"usage",level:2},{value:"Previously declared transformer",id:"previously-declared-transformer",level:3},{value:"Inline",id:"inline",level:3},{value:"With a handler",id:"with-a-handler",level:4},{value:"With a template",id:"with-a-template",level:4},{value:"Example",id:"example",level:2}],u={toc:m},y="wrapper";function c(e){let{components:r,...n}=e;return(0,t.yg)(y,(0,a.c)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"transformer"},"Transformer"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"A transformer's mode can either be display, in or out"),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("i",null,"transformers")," entry holds the information for these three types of transformation"),(0,t.yg)("li",{parentName:"ul"},"A display, in or out is an array of transformers"),(0,t.yg)("li",{parentName:"ul"},"The transformers will be called sequentially as per their order in the array"),(0,t.yg)("li",{parentName:"ul"},"Create a project wide transformer in the form of a _formulaik file in ",(0,t.yg)("b",null,"src/transformers/{in|out|display}"),".")),(0,t.yg)(s(),{schema:{title:"Schema",type:"object",description:"",properties:{_formulaikType:{type:"string",default:"transformer",enum:["transformer"]},id:{type:"string",description:"Unique ID"},modes:{type:"array",enum:["in","out","display"],description:"Transformer modes"},description:{type:"string"},template:{type:"string",description:"The template is a regular [ejs](https://ejs.co) template. It will compile by using Formulaik.payload as its data source."},params:{type:"object",description:"Params for a previously declared transformer"},handler:{type:"object",description:"Handler"}},required:["id","modes"]},mdxType:"JSONSchemaViewer"}),(0,t.yg)("h3",{id:"modes"},"Modes"),(0,t.yg)("h4",{id:"in"},"In"),(0,t.yg)("p",null,"An In transformer is applied to a value before it is presented to the inquirer."),(0,t.yg)("h4",{id:"out"},"Out"),(0,t.yg)("p",null,"An Out transformer is applied to a value after it is presented to the inquirer and filled by the user."),(0,t.yg)("h4",{id:"display"},"Display"),(0,t.yg)("p",null,"A Display transformer is applied to a value only for display formatting."),(0,t.yg)("h2",{id:"usage"},"Usage"),(0,t.yg)("p",null,"You can use a transformer in any question."),(0,t.yg)("h3",{id:"previously-declared-transformer"},"Previously declared transformer"),(0,t.yg)("p",null,"To use a previously declared transformer, pass its id and params if needed:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"{\n    ...\n    transformers: [\n        {\n            id: 'myDisplayTransformerId',\n            params: {\n                myParam1: true\n            }\n        }\n    ]\n}\n")),(0,t.yg)("h3",{id:"inline"},"Inline"),(0,t.yg)("h4",{id:"with-a-handler"},"With a handler"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"{\n    ...\n    transformers: [\n        {\n            ...,\n            handler: ({ input }) => {\n               ...\n            }\n        }\n    ]\n}\n")),(0,t.yg)("p",null,(0,t.yg)("em",{parentName:"p"},"Example")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"{\n    ...\n    transformers: [\n        {\n            modes: ['in', 'display'],\n            handler: ({ input }) => {\n                if(!input) {\n                    return \"\"\n                }\n                return `{${input}}`\n            }\n        }\n    ]\n}\n")),(0,t.yg)("h4",{id:"with-a-template"},"With a template"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"{\n    ...\n    transformers: [\n        {\n            ...,\n            template: '...<%= payloadVariable %>...'\n        }\n    ]\n}\n")),(0,t.yg)("p",null,(0,t.yg)("em",{parentName:"p"},"Example")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"{\n    ...\n    transformers: [\n        {\n            modes: ['in', 'display'],\n            template: `<%= destination %>/<%= featureId %>`\n        }\n    ]\n}\n")),(0,t.yg)("p",null,"The template is a regular ",(0,t.yg)("a",{parentName:"p",href:"https://ejs.co"},"ejs")," template.\nIt will compile by using Formulaik.payload as its data source."),(0,t.yg)("p",null,(0,t.yg)("a",{parentName:"p",href:"https://ejs.co/#docs"},"ejs documentation")),(0,t.yg)("h2",{id:"example"},"Example"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"transformers: [\n    {\n        modes: ['in', 'display'],\n        id: \"capitalizeFirstLetter\",\n    },\n    {\n        modes: ['in', 'display'],\n        handler: ({ input }) => {\n            if(!input) {\n                return \"\"\n            }\n            return `{${input}}`\n        }\n    },\n    {\n        modes: ['out'],\n        template: `<%= destination %>/<%= featureId %>`\n    }\n]\n\n")))}c.isMDXComponent=!0}}]);