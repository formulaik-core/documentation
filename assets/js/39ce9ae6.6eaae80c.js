"use strict";(self.webpackChunkformulaik=self.webpackChunkformulaik||[]).push([[980],{62956:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>p,contentTitle:()=>s,default:()=>y,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var n=r(45072),t=(r(11504),r(95788)),i=r(51944),l=r.n(i);const o={sidebar_position:5},s="Validator",d={unversionedId:"reference/validator",id:"reference/validator",title:"Validator",description:"- Validators can be declared separately in the src/validators folder",source:"@site/docs/reference/validator.mdx",sourceDirName:"reference",slug:"/reference/validator",permalink:"/documentation/docs/next/reference/validator",draft:!1,editUrl:"https://github.com/formulaik-core/generator-formulaik/tree/main/packages/create-docusaurus/templates/shared/docs/reference/validator.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Question",permalink:"/documentation/docs/next/reference/question"},next:{title:"Transformer",permalink:"/documentation/docs/next/reference/transformer"}},p={},u=[{value:"Usage",id:"usage",level:2},{value:"Previously declared validator",id:"previously-declared-validator",level:3},{value:"Inline",id:"inline",level:3}],c={toc:u},m="wrapper";function y(e){let{components:a,...r}=e;return(0,t.yg)(m,(0,n.c)({},c,r,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"validator"},"Validator"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Validators can be declared separately in the src/validators folder"),(0,t.yg)("li",{parentName:"ul"},"They can also be declared inline in reference to a question"),(0,t.yg)("li",{parentName:"ul"},"The ",(0,t.yg)("i",null,"validators")," entry in a questions holds its array of validators"),(0,t.yg)("li",{parentName:"ul"},"The validators will be called sequentially as per their order in the array"),(0,t.yg)("li",{parentName:"ul"},"Create a project wide validator in the form of a _formulaik file in ",(0,t.yg)("b",null,"src/validators/")),(0,t.yg)("li",{parentName:"ul"},"Any extension can declare its validators as well")),(0,t.yg)(l(),{schema:{title:"Transformer schema",type:"object",description:"Allows for schema to be seen",properties:{_formulaikType:{type:"string",default:"validator",enum:["validator"]},id:{type:"string",description:"Unique ID"},description:{type:"string"},params:{type:"object",description:"Params for a previously declared validator"},handler:{type:"object",description:"Handler with parameters: input (text input) and params"}},required:["id"]},mdxType:"JSONSchemaViewer"}),(0,t.yg)("h2",{id:"usage"},"Usage"),(0,t.yg)("p",null,"You can use a validator in any question."),(0,t.yg)("h3",{id:"previously-declared-validator"},"Previously declared validator"),(0,t.yg)("p",null,"To use a previously declared validator, pass its id and params if needed:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"{\n    ...\n    validators: [\n        {\n            id: 'myValidatorId',\n            params: {\n                myParam1: true\n            }\n        }\n    ]\n}\n")),(0,t.yg)("p",null,(0,t.yg)("em",{parentName:"p"},"Example")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},'{\n    ...\n    validators: [\n        {            \n            id: "nonempty",\n            params: {\n\n            }           \n        }\n    ]\n}\n')),(0,t.yg)("h3",{id:"inline"},"Inline"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"{\n    ...\n    validators: [\n        {            \n            handler: ({ input }) => {\n               ...\n            }\n        }\n    ]\n}\n")),(0,t.yg)("p",null,(0,t.yg)("em",{parentName:"p"},"Example")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"{\n    ...\n    validators: [\n        {                        \n            handler: ({ input, params }) => {\n                return {\n                    isValid: !(input === null || input === undefined),\n                    message: 'Should not be empty'\n                }\n            }\n        }\n    ]\n}\n")))}y.isMDXComponent=!0}}]);