"use strict";(self.webpackChunkformulaik=self.webpackChunkformulaik||[]).push([[3497],{3299:(e,a,t)=>{t.d(a,{xA:()=>o,yg:()=>y});var n=t(6540);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function g(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var m=n.createContext({}),d=function(e){var a=n.useContext(m),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},o=function(e){var a=d(e.components);return n.createElement(m.Provider,{value:a},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},p=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,o=g(e,["components","mdxType","originalType","parentName"]),s=d(t),p=r,y=s["".concat(m,".").concat(p)]||s[p]||u[p]||i;return t?n.createElement(y,l(l({ref:a},o),{},{components:t})):n.createElement(y,l({ref:a},o))}));function y(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=p;var g={};for(var m in a)hasOwnProperty.call(a,m)&&(g[m]=a[m]);g.originalType=e,g[s]="string"==typeof e?e:r,l[1]=g;for(var d=2;d<i;d++)l[d]=t[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8759:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>g,toc:()=>d});var n=t(8168),r=(t(6540),t(3299));const i={},l="Validations",g={unversionedId:"guides/input/validations",id:"version-1.0/guides/input/validations",title:"Validations",description:"Validation is an essential part of any form building.",source:"@site/versioned_docs/version-1.0/4.guides/1.input/3.validations.md",sourceDirName:"4.guides/1.input",slug:"/guides/input/validations",permalink:"/documentation/docs/guides/input/validations",draft:!1,editUrl:"https://github.com/formulaik-core/generator-formulaik/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.0/4.guides/1.input/3.validations.md",tags:[],version:"1.0",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Data types",permalink:"/documentation/docs/guides/input/datatypes"},next:{title:"Remarkable inputs",permalink:"/documentation/docs/guides/input/remarkable"}},m={},d=[{value:"Define validations",id:"define-validations",level:2},{value:"Validation kinds per data type",id:"validation-kinds-per-data-type",level:2},{value:"String",id:"string",level:3},{value:"Number",id:"number",level:3},{value:"Boolean",id:"boolean",level:3},{value:"Date",id:"date",level:3},{value:"Array",id:"array",level:3}],o={toc:d},s="wrapper";function u(e){let{components:a,...t}=e;return(0,r.yg)(s,(0,n.A)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"validations"},"Validations"),(0,r.yg)("p",null,"Validation is an essential part of any form building.\nWhether you want to make sure the user has actually entered an email or a password is strong enough, you will want to implement both a per input validation or a full form validation using conditional validations.\nFormulaik takes the validation out of the components onto the inputs.\nThe formulaik engine you use is responsible for implementing the validation.\nFor instance the official React engine uses ",(0,r.yg)("inlineCode",{parentName:"p"},"yup")," for validation."),(0,r.yg)("h2",{id:"define-validations"},"Define validations"),(0,r.yg)("p",null,"Let's take the case of an email input:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},'{\n    component: \'input\',\n    id: \'email\',\n    label: \'Email\',\n    type: "string",\n    params: {        \n        placeholder: "email@domain.com"\n    },\n    validations: [\n        {\n            kind: "format",\n            value: "email",\n            message: \'Invalid email format\',\n        },\n        {\n            kind: "required",\n            value: true,\n            message: "This field can\'t be blank",\n        },\n    ],\n}   \n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"We expect a ",(0,r.yg)("inlineCode",{parentName:"li"},"string")," data type. This is important for the validation. By default it is set to ",(0,r.yg)("inlineCode",{parentName:"li"},"string"),"."),(0,r.yg)("li",{parentName:"ul"},"We have declared two ",(0,r.yg)("inlineCode",{parentName:"li"},"validations"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"format"),": make sure it's an email"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("inlineCode",{parentName:"li"},"required"),": this field is required")))),(0,r.yg)("p",null,"Formulaik processes both validations in sequential order.\nIt stops when the validation fails and displays the error message."),(0,r.yg)("h2",{id:"validation-kinds-per-data-type"},"Validation kinds per data type"),(0,r.yg)("p",null,"Formulaik supports these validations per data type out of the box:"),(0,r.yg)("h3",{id:"string"},"String"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Kind"),(0,r.yg)("th",{parentName:"tr",align:null},"Condition"),(0,r.yg)("th",{parentName:"tr",align:null},"Options"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"required")),(0,r.yg)("td",{parentName:"tr",align:null},"Text is required"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"length")),(0,r.yg)("td",{parentName:"tr",align:null},"Set a required length for the string value. The ${value} interpolation can be used in the message argument"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null)," ",(0,r.yg)("inlineCode",{parentName:"td"},"value?: number")," desired length")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"min")),(0,r.yg)("td",{parentName:"tr",align:null},"Set a minimum length limit for the string value. The ${value} interpolation can be used in the message argument"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null),"  ",(0,r.yg)("inlineCode",{parentName:"td"},"value: number")," minimum desired length")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"max")),(0,r.yg)("td",{parentName:"tr",align:null},"Set a maximum length limit for the string value. The ${value} interpolation can be used in the message argument"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null),"  ",(0,r.yg)("inlineCode",{parentName:"td"},"value: number")," maximum desired length")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"matches")),(0,r.yg)("td",{parentName:"tr",align:null},"Provide an arbitrary regex to match the value against"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null),"  ",(0,r.yg)("inlineCode",{parentName:"td"},"value: string")," regex")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"email")),(0,r.yg)("td",{parentName:"tr",align:null},"Validates the value as an email address using the same regex as defined by the HTML spec."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null),' WATCH OUT: Validating email addresses is nearly impossible with just code. Different clients and servers accept different things and many diverge from the various specs defining "valid" emails. The ONLY real way to validate an email address is to send a verification email to it and check that the user got it. With that in mind, yup picks a relatively simple regex that does not cover all cases, but aligns with browser input validation behavior since HTML forms are a common use case for yup. If you have more specific needs please override the email method with your own logic or regex')),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"url")),(0,r.yg)("td",{parentName:"tr",align:null},"Validates the value as a valid URL via a regex"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"uuid")),(0,r.yg)("td",{parentName:"tr",align:null},"Validates the value as a valid UUID via a regex"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"datetime")),(0,r.yg)("td",{parentName:"tr",align:null},"Validates the value as an ISO datetime via a regex. Defaults to UTC validation; timezone offsets are not permitted"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null)," ",(0,r.yg)("inlineCode",{parentName:"td"},"allowOffset?: boolean")," Allow offset ",(0,r.yg)("br",null)," ",(0,r.yg)("inlineCode",{parentName:"td"},"precision?: string")," Precision ",(0,r.yg)("br",null),"Unlike .date(), datetime will not convert the string to a Date object. datetime also provides greater customization over the required format of the datetime string than date does. options.allowOffset: Allow a time zone offset. False requires UTC 'Z' timezone. (default: false) options.precision: Require a certain sub-second precision on the date. (default: null -- any (or no) sub-second precision)")))),(0,r.yg)("h3",{id:"number"},"Number"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Kind"),(0,r.yg)("th",{parentName:"tr",align:null},"Condition"),(0,r.yg)("th",{parentName:"tr",align:null},"Options"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"min")),(0,r.yg)("td",{parentName:"tr",align:null},"Set the minimum value allowed. The ${value} interpolation can be used in the message argument"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null),"  ",(0,r.yg)("inlineCode",{parentName:"td"},"value: number")," minimum value")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"max")),(0,r.yg)("td",{parentName:"tr",align:null},"Set the maximum value allowed. The ${value} interpolation can be used in the message argument"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null),"  ",(0,r.yg)("inlineCode",{parentName:"td"},"value: number")," maximum value")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"lessThan")),(0,r.yg)("td",{parentName:"tr",align:null},"Value must be less than value. The ${less} interpolation can be used in the message argument"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message  ",(0,r.yg)("br",null),"  ",(0,r.yg)("inlineCode",{parentName:"td"},"value: number")," maximum value")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"moreThan")),(0,r.yg)("td",{parentName:"tr",align:null},"Value must be strictly greater than min. The ${value} interpolation can be used in the message argument"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null),"  ",(0,r.yg)("inlineCode",{parentName:"td"},"value: number")," minimum value")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"positive")),(0,r.yg)("td",{parentName:"tr",align:null},"Value must be a positive number"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"negative")),(0,r.yg)("td",{parentName:"tr",align:null},"Value must be a negative number"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"integer")),(0,r.yg)("td",{parentName:"tr",align:null},"Validates that a number is an integer"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message")))),(0,r.yg)("h3",{id:"boolean"},"Boolean"),(0,r.yg)("p",null,"#TODO"),(0,r.yg)("h3",{id:"date"},"Date"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Kind"),(0,r.yg)("th",{parentName:"tr",align:null},"Condition"),(0,r.yg)("th",{parentName:"tr",align:null},"Options"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"min")),(0,r.yg)("td",{parentName:"tr",align:null},"Set the minimum date allowed. When a string is provided it will attempt to cast to a date first and use the result as the limit"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null),"  ",(0,r.yg)("inlineCode",{parentName:"td"},"value: number")," minimum value")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"max")),(0,r.yg)("td",{parentName:"tr",align:null},"Set the maximum value allowed. The ${value} interpolation can be used in the message argument"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null),"  ",(0,r.yg)("inlineCode",{parentName:"td"},"value: number")," maximum value")))),(0,r.yg)("h3",{id:"array"},"Array"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Kind"),(0,r.yg)("th",{parentName:"tr",align:null},"Condition"),(0,r.yg)("th",{parentName:"tr",align:null},"Options"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"length")),(0,r.yg)("td",{parentName:"tr",align:null},"Set a specific length requirement for the array. The ${value} interpolation can be used in the message argument"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null)," ",(0,r.yg)("inlineCode",{parentName:"td"},"value?: number")," desired length")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"min")),(0,r.yg)("td",{parentName:"tr",align:null},"Set a minimum length limit for the array. The ${value} interpolation can be used in the message argument."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null),"  ",(0,r.yg)("inlineCode",{parentName:"td"},"value: number")," minimum value")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"max")),(0,r.yg)("td",{parentName:"tr",align:null},"Set a maximum length limit for the array. The ${value} interpolation can be used in the message argument."),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"message?: string")," error message ",(0,r.yg)("br",null),"  ",(0,r.yg)("inlineCode",{parentName:"td"},"value: number")," maximum value")))))}u.isMDXComponent=!0}}]);