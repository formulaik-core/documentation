"use strict";(self.webpackChunkformulaik=self.webpackChunkformulaik||[]).push([[4605],{3299:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>y});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=u(t),m=a,y=c["".concat(s,".").concat(m)]||c[m]||d[m]||o;return t?r.createElement(y,i(i({ref:n},p),{},{components:t})):r.createElement(y,i({ref:n},p))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4958:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=t(8168),a=(t(6540),t(3299));const o={},i="Array inputs",l={unversionedId:"guides/input/array",id:"version-1.0/guides/input/array",title:"Array inputs",description:"Formulaik can render an array of inputs that have the same component.",source:"@site/versioned_docs/version-1.0/4.guides/1.input/7.array.mdx",sourceDirName:"4.guides/1.input",slug:"/guides/input/array",permalink:"/documentation/docs/guides/input/array",draft:!1,editUrl:"https://github.com/formulaik-core/generator-formulaik/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.0/4.guides/1.input/7.array.mdx",tags:[],version:"1.0",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Multi inputs",permalink:"/documentation/docs/guides/input/multi"},next:{title:"Create a component library",permalink:"/documentation/docs/category/create-a-component-library"}},s={},u=[{value:"Example",id:"example",level:3}],p={toc:u},c="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(c,(0,r.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"array-inputs"},"Array inputs"),(0,a.yg)("p",null,"Formulaik can render an array of inputs that have the same component.\nThis is useful when you want the user to add new inputs with a fixed type (component)."),(0,a.yg)("p",null,"There are some differences with a regular input:"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"The input is an abstraction of an array of inputs. Thus it does not declare a component."),(0,a.yg)("li",{parentName:"ul"},"It declares the components needed for the container. The container component is declared the same way a regular input component is"),(0,a.yg)("li",{parentName:"ul"},"It declares the abstract compponents in ",(0,a.yg)("inlineCode",{parentName:"li"},"params"),". This is where you declare the input template."),(0,a.yg)("li",{parentName:"ul"},"The special ",(0,a.yg)("inlineCode",{parentName:"li"},"placeholder")," field in params will provide the default value needed to instantiate a new element in the array "),(0,a.yg)("li",{parentName:"ul"},"Add  ",(0,a.yg)("inlineCode",{parentName:"li"},"isList: true")," to declare this input as an array input"),(0,a.yg)("li",{parentName:"ul"},"Use ",(0,a.yg)("inlineCode",{parentName:"li"},"canRemove"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"showRemove"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"canAddItems"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"canMove"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"showControls"),", ",(0,a.yg)("inlineCode",{parentName:"li"},"maxItems")," and ",(0,a.yg)("inlineCode",{parentName:"li"},"isHorizontal")," to configure the input")),(0,a.yg)("h3",{id:"example"},"Example"),(0,a.yg)("p",null,"This code will create a form for the user to add questions at will:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"const inputs = [\n    {\n        id: 'choices',\n        label: 'Choices',\n        isList: true,\n        canRemove: true,\n        showRemove: false,\n        canAddItems: true,\n        canMove: true,\n        showControls: true,\n        maxItems: 4,\n        isHorizontal: true,\n        className: 'py-2',\n        label: 'Questions',\n        add: {\n            type: '_buttonAdd',\n            title: MPI18nT(\"Add a choice\")\n        },\n        container: {\n            type: '_containerHorizontal',\n            title: ({ value, index }) => null,\n            className: ''\n        },\n        params: {\n            component: 'questionchoicetext',\n            id: 'choice',\n            label: 'Choice',\n            params: {\n            placeholder: async () => {\n                return {\n                content: '',\n                }\n            },\n            }               \n        }\n    },\n    {\n      component: 'submit',\n      id: 'submit',\n      params: {\n        text: 'Continue'\n      }\n    },\n]\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"It uses the ",(0,a.yg)("inlineCode",{parentName:"li"},"_containerHorizontal")," component"),(0,a.yg)("li",{parentName:"ul"})),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import React from 'react'\nimport IconButton from '@mui/material/IconButton'\n\nimport { Trash, ChevronLeft, ChevronRight } from 'react-feather'\n\nexport default (props) => {\n  const {\n    summary,\n    title,\n    children,\n    onMoveDownRequired,\n    onRemoveRequired,\n    onMoveUpRequired,\n    canRemove,\n    canMoveUp,\n    canMoveDown,\n    showControls,\n    disabled = false,\n    readOnly = false,\n    value,\n    index,\n    className,\n    error\n  } = props\n\n  return <div className={`\n          border-warmGray-200\n          hover:border-warmGray-300\n          transition-all\n          ease-in-out\n          duration-300\n          border-2\n          py-1\n          rounded-xl ${className}`}>\n    <div className='\n    border-b\n    border-warmGray-100\n    px-2\n    py-1\n    flex justify-end mr-4'>\n      {summary && summary({ value, index })}\n      {showControls && <div className='flex gap-3'>\n        <IconButton aria-label=\"Move up\" disabled={disabled || !canMoveUp} component=\"span\"\n          onClick={(e) => {\n            e.preventDefault()\n            e.stopPropagation()\n            onMoveUpRequired && onMoveUpRequired()\n          }} >\n          <ChevronLeft\n            size={20}\n          />\n        </IconButton>\n        <IconButton aria-label=\"Move down\" disabled={disabled || !canMoveDown} component=\"span\"\n          onClick={(e) => {\n            e.preventDefault()\n            e.stopPropagation()\n            onMoveDownRequired && onMoveDownRequired()\n          }}>\n          <ChevronRight\n            size={20}\n          />\n        </IconButton>\n        <IconButton aria-label=\"Delete\" disabled={disabled} component=\"span\"\n          onClick={(e) => {\n            e.preventDefault()\n            e.stopPropagation()\n            onRemoveRequired && onRemoveRequired()\n          }} >\n          {canRemove &&\n            <Trash\n              size={20}\n            />}\n        </IconButton>\n      </div>\n      }\n    </div>\n    <div className='px-1'>\n      {children}\n    </div>\n  </div>\n}\n`\n")))}d.isMDXComponent=!0}}]);