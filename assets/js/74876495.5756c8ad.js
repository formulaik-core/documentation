"use strict";(self.webpackChunkformulaik=self.webpackChunkformulaik||[]).push([[6505],{15680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>f});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),m=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=m(e.components);return a.createElement(s.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=m(t),d=r,f=c["".concat(s,".").concat(d)]||c[d]||p[d]||l;return t?a.createElement(f,o(o({ref:n},u),{},{components:t})):a.createElement(f,o({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var m=2;m<l;m++)o[m]=t[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},80076:(e,n,t)=>{t.d(n,{A:()=>s});var a=t(96540),r=t(49489),l=t(7227),o=t(23833),i=t(68316);const s=e=>{const n=e.npm?e.npm:(0,i.A)(e.yarn,"npm"),t=e.yarn?e.yarn:(0,i.A)(e.npm,"yarn");return a.createElement(r.default,null,a.createElement(l.default,{value:"npm",label:"npm",default:!0},a.createElement(o.default,{language:"bash"},n)),a.createElement(l.default,{value:"bash",label:"yarn"},a.createElement(o.default,{language:"bash"},t)))}},87419:(e,n,t)=>{t.d(n,{A:()=>m});var a=t(96540),r=t(10796),l=t(43651),o=t(49489),i=t(7227);const s=()=>a.createElement("div",{className:"h-36  "},a.createElement("h4",null,"Not available yet."),a.createElement("a",null,"Want to contribute? Join the movement.")),m=e=>{let{hideTitle:n=!1}=e;return a.createElement("div",{class:"                     \n        "},a.createElement(o.default,null,a.createElement(i.default,{value:"React JS",label:"React JS",default:!0},a.createElement(r.A,null)),a.createElement(i.default,{value:"React Native",label:"React Native"},a.createElement(l.A,null)),a.createElement(i.default,{value:"Swift",label:"Swift"},a.createElement(s,null)),a.createElement(i.default,{value:"Kotlin",label:"Kotlin"},a.createElement(s,null)),a.createElement(i.default,{value:"flutter",label:"Flutter"},a.createElement(s,null)),a.createElement(i.default,{value:"VueJS",label:"Vue JS"},a.createElement(s,null))))}},10796:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(96540),r=t(23833),l=t(80076);const o=e=>{let{}=e;return a.createElement("div",{class:"                     \n        "},a.createElement("p",{className:"text-lg font-bold"},"1. Install formulaik and a component library"),a.createElement(l.A,{npm:"npm install @formulaik/react @formulaik-community/react-mui"}),a.createElement("p",{className:"text-lg font-bold"},"2. Define inputs"),a.createElement(r.default,{language:"jsx"},"const inputs = [\n  {\n    component: 'input',\n    id: 'email',\n    label: 'Email',\n    type: \"string\",\n    params: {\n      type: 'email',\n      placeholder: \"email@domain.com\"\n    },\n    validations: [\n      {\n        kind: \"format\",\n        value: \"email\",\n        message: 'Invalid email format',\n      },\n      {\n        kind: \"required\",\n        value: true,\n        message: \"This field can't be blank\",\n      },\n    ],\n  },\n  {\n    component: 'inputPassword',\n    label: 'Password',\n    id: 'password',\n    type: \"string\",\n    params: {\n      type: 'password',\n      autoComplete: \"current-password\",\n      placeholder: \"xxxx-xxxx-xxxx\"\n    },\n    validations: [\n      {\n        kind: \"matches\",\n        value: /^(?=.*d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/,\n        message: 'Invalid password, must contain at least 8 characters and at most 18 characters',\n      },\n      {\n        kind: \"required\",\n        value: true,\n        message: \"This field can't be blank\",\n      },\n    ]\n  },\n  {\n    component: 'submit',\n    params: {\n      text: 'Continue'\n    }\n  },\n]"),a.createElement("p",{className:"text-lg font-bold"},"3. Provide initial values (optional)"),a.createElement(r.default,{language:"jsx"},"const values = {\n    email: cookies.get('email'),\n}"),a.createElement("p",{className:"text-lg font-bold"},"4. Render forms and handle submit"),a.createElement(r.default,{language:"jsx"},"import Formulaik from '@formulaik/react'\nimport FormulaikMui from '@formulaik-community/react-mui'\n\nexport default (props) => {\n  \n const onSubmit = async (values) => {\n    const { email, password } = values\n    try { \n      await myapi.submit({ email, password })\n    }\n    catch(e) {\n      throw (new Error('Could not sign in: ', e.message))\n    }\n    return { message: t(\"Email validated\") }  \n  }\n\n  return <>      \n      <h3>Login</h3>            \n      <Formulaik\n        components={[FormulaikMui]}\n        values={values}        \n        inputs={inputs}\n        onSubmit={onSubmit}\n         />      \n    </>\n}"))}},43651:(e,n,t)=>{t.d(n,{A:()=>o});var a=t(96540),r=t(23833),l=t(80076);const o=e=>{let{}=e;return a.createElement("div",{class:"                     \n        "},a.createElement("p",{className:"text-lg font-bold"},"1. Install formulaik and a component library"),a.createElement(l.A,{npm:"npm install @formulaik/react-native @formulaik-community/react-native-paper"}),a.createElement("p",{className:"text-lg font-bold"},"2. Define inputs"),a.createElement(r.default,{language:"jsx"},"const inputs = [\n  {\n    component: 'input',\n    id: 'email',\n    label: 'Email',\n    type: \"string\",\n    params: {\n      type: 'email',\n      placeholder: \"email@domain.com\"\n    },\n    validations: [\n      {\n        kind: \"format\",\n        value: \"email\",\n        message: 'Invalid email format',\n      },\n      {\n        kind: \"required\",\n        value: true,\n        message: \"This field can't be blank\",\n      },\n    ],\n  },\n  {\n    component: 'inputPassword',\n    label: 'Password',\n    id: 'password',\n    type: \"string\",\n    params: {\n      type: 'password',\n      autoComplete: \"current-password\",\n      placeholder: \"xxxx-xxxx-xxxx\"\n    },\n    validations: [\n      {\n        kind: \"matches\",\n        value: /^(?=.*d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/,\n        message: 'Invalid password, must contain at least 8 characters and at most 18 characters',\n      },\n      {\n        kind: \"required\",\n        value: true,\n        message: \"This field can't be blank\",\n      },\n    ]\n  },\n  {\n    component: 'submit',\n    params: {\n      text: 'Continue'\n    }\n  },\n]"),a.createElement("p",{className:"text-lg font-bold"},"3. Provide initial values (optional)"),a.createElement(r.default,{language:"jsx"},"const values = {\n    email: cookies.get('email'),\n}"),a.createElement("p",{className:"text-lg font-bold"},"4. Render forms and handle submit"),a.createElement(r.default,{language:"jsx"},"import Formulaik from '@formulaik/react'\nimport FormulaikPaper from '@formulaik-community/react-native-paper'\nimport { Text } from 'react-native'\n\nexport default (props) => {\n\n const onSubmit = async (values) => {\n    const { email, password } = values\n    try { \n      await myapi.submit({ email, password })\n    }\n    catch(e) {\n      throw (new Error('Could not sign in: ', e.message))\n    }\n    return { message: t(\"Email validated\") }  \n  }\n\n  return <>      \n      <Text>Login</Text>             \n      <Formulaik\n        components={[FormulaikPaper]}\n        values={values}        \n        inputs={inputs}\n        onSubmit={onSubmit}\n         />      \n    </>\n}"))}},29292:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var a=t(58168),r=(t(96540),t(15680)),l=(t(80076),t(87419));t(43651),t(49489),t(7227);const o={sidebar_position:1},i="Quick start \ud83d\ude80",s={unversionedId:"quickstart",id:"quickstart",title:"Quick start \ud83d\ude80",description:"For people in a hurry",source:"@site/docs/quickstart.mdx",sourceDirName:".",slug:"/quickstart",permalink:"/documentation/docs/next/quickstart",draft:!1,editUrl:"https://github.com/formulaik-core/generator-formulaik/tree/main/packages/create-docusaurus/templates/shared/docs/quickstart.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/documentation/docs/next/overview"},next:{title:"Concepts",permalink:"/documentation/docs/next/category/concepts"}},m={},u=[],c={toc:u},p="wrapper";function d(e){let{components:n,...t}=e;return(0,r.yg)(p,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"quick-start-"},"Quick start \ud83d\ude80"),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"For people in a hurry")),(0,r.yg)(l.A,{mdxType:"QuickStart"}))}d.isMDXComponent=!0}}]);