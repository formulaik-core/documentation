"use strict";(self.webpackChunkformulaik=self.webpackChunkformulaik||[]).push([[9192],{12184:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>m,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var a=t(45072),r=(t(11504),t(95788)),i=t(51944),o=t.n(i);const s={sidebar_position:4},m="Question",l={unversionedId:"reference/question",id:"version-1.0/reference/question",title:"Question",description:"- Project wide question in the form of a _formulaik file in src/questions/.",source:"@site/versioned_docs/version-1.0/reference/question.mdx",sourceDirName:"reference",slug:"/reference/question",permalink:"/documentation/docs/reference/question",draft:!1,editUrl:"https://github.com/formulaik-core/generator-formulaik/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.0/reference/question.mdx",tags:[],version:"1.0",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Command",permalink:"/documentation/docs/reference/command"},next:{title:"Validator",permalink:"/documentation/docs/reference/validator"}},p={},u=[{value:"Usage",id:"usage",level:2}],d={toc:u},c="wrapper";function g(e){let{components:n,...t}=e;return(0,r.yg)(c,(0,a.c)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"question"},"Question"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Project wide question in the form of a _formulaik file in ",(0,r.yg)("b",null,"src/questions/"),"."),(0,r.yg)("li",{parentName:"ul"},"To inherit a question the only required argument is ",(0,r.yg)("inlineCode",{parentName:"li"},"name"),". The rest of the arguments will be inherited."),(0,r.yg)("li",{parentName:"ul"},"Order of precedence: ",(0,r.yg)("strong",{parentName:"li"},"Formulaik.prompt.ask")," > ",(0,r.yg)("strong",{parentName:"li"},"command")," > ",(0,r.yg)("strong",{parentName:"li"},"src/questions")),(0,r.yg)("li",{parentName:"ul"},"A ",(0,r.yg)("strong",{parentName:"li"},"Formulaik.prompt.ask")," question inherits a matching ",(0,r.yg)("strong",{parentName:"li"},"command")," question if there's any"),(0,r.yg)("li",{parentName:"ul"},"If there's no matching ",(0,r.yg)("strong",{parentName:"li"},"command")," question, ",(0,r.yg)("strong",{parentName:"li"},"Formulaik.prompt.ask")," question inherits a matching ",(0,r.yg)("strong",{parentName:"li"},"src/questions")," question if there's any"),(0,r.yg)("li",{parentName:"ul"},"A ",(0,r.yg)("strong",{parentName:"li"},"command")," question inherits a ",(0,r.yg)("strong",{parentName:"li"},"src/questions")," question if there's any"),(0,r.yg)("li",{parentName:"ul"},"A ",(0,r.yg)("strong",{parentName:"li"},"Formulaik.prompt.ask")," question inherits a ",(0,r.yg)("strong",{parentName:"li"},"command")," question"),(0,r.yg)("li",{parentName:"ul"},"A question defined by ",(0,r.yg)("strong",{parentName:"li"},"Command")," takes precedence over a question defined in ",(0,r.yg)("strong",{parentName:"li"},"Command"))),(0,r.yg)(o(),{schema:{title:"Question",type:"object",description:"Allows for schema to be seen",properties:{_formulaikType:{type:"string",default:"question",enum:["question"]},name:{type:"string",description:"Unique ID"},description:{type:"string",description:"Command description"},validators:{type:"array",description:"Validators"},transformers:{type:"array",description:"Transformers"},sideEffects:{type:"array",description:"Side effects"},storeValue:{type:"boolean",description:"Store input value"},loadValueFromStore:{type:"boolean",description:"Store input value"},storeDomain:{type:"string",description:"Store domain"}},required:["name"]},mdxType:"JSONSchemaViewer"}),(0,r.yg)("h2",{id:"usage"},"Usage"),(0,r.yg)("p",null,"You can pass the name of the transformer in a command ",(0,r.yg)("i",null,"questions"),"."),(0,r.yg)("p",null,"In any ",(0,r.yg)("strong",{parentName:"p"},"Command")," (",(0,r.yg)("inlineCode",{parentName:"p"},"src/commands")," folder)"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"export default ({\n    _formulaikType: \"command\",\n    name: 'schema',\n    questions: [\n    {\n        name: 'appPath',\n        message: \"Path to app\",\n        validators: [{ id: 'nonempty' }]\n    },\n]\n})\n")),(0,r.yg)("p",null,"In a command handler ",(0,r.yg)("strong",{parentName:"p"},"Formulaik.prompt.ask")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"await Formulaik.prompt.ask([\n    {        \n        name: 'appPath',\n        message: \"Path to app\",\n        validators: [{ id: 'nonempty' }]        \n    },\n])\n")))}g.isMDXComponent=!0}}]);