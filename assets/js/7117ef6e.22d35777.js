"use strict";(self.webpackChunkformulaik=self.webpackChunkformulaik||[]).push([[709],{3299:(e,n,a)=>{a.d(n,{xA:()=>p,yg:()=>c});var t=a(6540);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=t.createContext({}),m=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},p=function(e){var n=m(e.components);return t.createElement(s.Provider,{value:n},e.children)},u="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=m(a),d=i,c=u["".concat(s,".").concat(d)]||u[d]||g[d]||l;return a?t.createElement(c,r(r({ref:n},p),{},{components:a})):t.createElement(c,r({ref:n},p))}));function c(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[u]="string"==typeof e?e:i,r[1]=o;for(var m=2;m<l;m++)r[m]=a[m];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5880:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>g,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var t=a(8168),i=(a(6540),a(3299));const l={sidebar_position:2},r="Usage",o={unversionedId:"gettingstarted/usage",id:"gettingstarted/usage",title:"Usage",description:"In this guide we will use an existing component library that adapts some of the Google Material UI components: formulaik-mui-react.",source:"@site/docs/gettingstarted/2.usage.md",sourceDirName:"gettingstarted",slug:"/gettingstarted/usage",permalink:"/documentation/docs/next/gettingstarted/usage",draft:!1,editUrl:"https://github.com/formulaik-core/generator-formulaik/tree/main/packages/create-docusaurus/templates/shared/docs/gettingstarted/2.usage.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/documentation/docs/next/gettingstarted/installation"},next:{title:"Troubleshooting \ud83d\udc1e",permalink:"/documentation/docs/next/gettingstarted/troubleshooting"}},s={},m=[{value:"Declare inputs",id:"declare-inputs",level:2},{value:"Declare values",id:"declare-values",level:2},{value:"Handle submission",id:"handle-submission",level:2},{value:"Putting it all together",id:"putting-it-all-together",level:2},{value:"Screenshots",id:"screenshots",level:2}],p={toc:m},u="wrapper";function g(e){let{components:n,...l}=e;return(0,i.yg)(u,(0,t.A)({},p,l,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"usage"},"Usage"),(0,i.yg)("p",null,"In this guide we will use an existing component library that adapts some of the Google Material UI components: ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/formulaik-community/formulaik-mui-react"},"formulaik-mui-react"),".\nYou can also use your ",(0,i.yg)("a",{parentName:"p",href:"../guides/componentlibrary/overview"},"custom components library"),"."),(0,i.yg)("p",null,"We are going to build this form:"),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(9943).A,width:"702",height:"718"})),(0,i.yg)("h2",{id:"declare-inputs"},"Declare inputs"),(0,i.yg)("p",null,"An ",(0,i.yg)("a",{parentName:"p",href:"../concepts/terms#input"},"input")," is a JSON declaration for formulaik to show a component referenced by a the ",(0,i.yg)("inlineCode",{parentName:"p"},"component")," key.\nThis is where we define what the form will look like, which components it will include and how each one of them will behave."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"const inputs = [\n{\n      component: 'input',\n      id: 'email',\n      label: 'Email',\n      type: \"string\",\n      params: {  \n        placeholder: \"email@domain.com\"\n      },\n      validations: [\n        {\n          kind: \"format\",\n          value: \"email\",\n          message: 'Invalid email format',\n        },\n        {\n          kind: \"required\",\n          value: true,\n          message: \"This field can't be blank\",\n        },\n      ],\n    },\n    {\n      component: 'inputPassword',\n      label: 'Password',\n      id: 'password',\n      type: \"string\",\n      params: {\n        autoComplete: \"current-password\",\n        placeholder: \"xxxx-xxxx-xxxx\"\n      },\n      validations: [\n        {\n          kind: \"required\",\n          value: true,\n          message: \"This field can't be blank\",\n        },\n        {\n          kind: \"matches\",\n          value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/,\n          message: 'Invalid password, must contain at least 8 characters and at most 18 characters',\n        },\n      ]\n    },\n    {\n        component: 'checkbox',  \n        id: 'rememberMe',\n        type: \"boolean\",\n        params: {\n            label: 'Remember me',\n        }\n    },\n    {\n      component: 'submit',\n      id: 'submit',\n      params: {\n        text: 'Continue'\n      }\n    },\n]\n")),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"The input with the ",(0,i.yg)("inlineCode",{parentName:"p"},"id"),' "email" tells formulaik'),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"to use the ",(0,i.yg)("inlineCode",{parentName:"li"},"component")," with the ",(0,i.yg)("inlineCode",{parentName:"li"},"email")," id"),(0,i.yg)("li",{parentName:"ul"},"to label the ",(0,i.yg)("inlineCode",{parentName:"li"},"component")," ",(0,i.yg)("em",{parentName:"li"},"Email")),(0,i.yg)("li",{parentName:"ul"},"to expect a ",(0,i.yg)("inlineCode",{parentName:"li"},"string")," data type"),(0,i.yg)("li",{parentName:"ul"},"to forward the ",(0,i.yg)("inlineCode",{parentName:"li"},"params")," to the component, namely the ",(0,i.yg)("em",{parentName:"li"},"placeholder")," customization"),(0,i.yg)("li",{parentName:"ul"},"to use the ",(0,i.yg)("inlineCode",{parentName:"li"},"validations")," rules:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"format"),": make sure it's an email"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"required"),": this field is required"))))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"The input with the ",(0,i.yg)("inlineCode",{parentName:"p"},"id")," ",(0,i.yg)("em",{parentName:"p"},"password")," tells formulaik"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"to use the ",(0,i.yg)("inlineCode",{parentName:"li"},"component")," with the ",(0,i.yg)("inlineCode",{parentName:"li"},"password")," id"),(0,i.yg)("li",{parentName:"ul"},"to label the ",(0,i.yg)("inlineCode",{parentName:"li"},"component")," ",(0,i.yg)("em",{parentName:"li"},"Password")),(0,i.yg)("li",{parentName:"ul"},"to expect a ",(0,i.yg)("inlineCode",{parentName:"li"},"string")," data type"),(0,i.yg)("li",{parentName:"ul"},"to forward the ",(0,i.yg)("inlineCode",{parentName:"li"},"params")," to the component, namely the ",(0,i.yg)("em",{parentName:"li"},"placeholder")," and the ",(0,i.yg)("em",{parentName:"li"},"autoComplete")," customizations"),(0,i.yg)("li",{parentName:"ul"},"to use the ",(0,i.yg)("inlineCode",{parentName:"li"},"validations")," rules:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"required"),": this field is required"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"matches"),": this field matches the provided regex, if not, display the error message"))))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"The input with the ",(0,i.yg)("inlineCode",{parentName:"p"},"id")," ",(0,i.yg)("em",{parentName:"p"},"rememberMe")," tells formulaik"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"to use the ",(0,i.yg)("inlineCode",{parentName:"li"},"component")," with the ",(0,i.yg)("inlineCode",{parentName:"li"},"checkbox")," id"),(0,i.yg)("li",{parentName:"ul"},"to expect a ",(0,i.yg)("inlineCode",{parentName:"li"},"boolean")," data type"),(0,i.yg)("li",{parentName:"ul"},"to forward the ",(0,i.yg)("inlineCode",{parentName:"li"},"params")," to the component, namely the ",(0,i.yg)("em",{parentName:"li"},"label")," customizations"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"The input with the ",(0,i.yg)("inlineCode",{parentName:"p"},"id")," ",(0,i.yg)("em",{parentName:"p"},"submit")," tells formulaik"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"to use the ",(0,i.yg)("inlineCode",{parentName:"li"},"component")," with the ",(0,i.yg)("inlineCode",{parentName:"li"},"submit")," id"),(0,i.yg)("li",{parentName:"ul"},"to forward the ",(0,i.yg)("inlineCode",{parentName:"li"},"params")," to the component, namely the ",(0,i.yg)("em",{parentName:"li"},"text")," (label) customizations")))),(0,i.yg)("p",null,"As you can see the inputs come as an ordered array and are fed to your Formulaik engine of choice.\nThey are:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Platform agnostic"),(0,i.yg)("li",{parentName:"ul"},"Language agnostic")),(0,i.yg)("h2",{id:"declare-values"},"Declare values"),(0,i.yg)("p",null,(0,i.yg)("inlineCode",{parentName:"p"},"values")," are the default values passed to Formulaik.\nYou need to match the ids provided in the inputs section.\nHere is an example with default values being retrieved from cookies storage:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"const values = {\n  email: cookies.get('email'),\n  password: \"\",\n  rememberMe: cookies.get('rememberMe'),\n}\n")),(0,i.yg)("p",null,"We will use empty values for this guide:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},'const values = {\n  email: "",\n  password: "",\n  rememberMe: false,\n}\n')),(0,i.yg)("p",null,"Values can also be undefined."),(0,i.yg)("h2",{id:"handle-submission"},"Handle submission"),(0,i.yg)("p",null,"Formulaik was built to make form submission seamless and easy.\nOnce all the validations have passed, the ",(0,i.yg)("inlineCode",{parentName:"p"},"onSubmit")," callback is called with the ",(0,i.yg)("inlineCode",{parentName:"p"},"values")," provided by the user and a few extra options:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"}," const onSubmit = async (values) => {\n    const { email, password } = values\n    try { \n      await myapi.submit({ email, password })\n    }\n    catch(e) {\n      throw (new Error('Could not sign in: ', e.message))\n    }\n    return { message: t(\"Email validated\") }  \n  }\n")),(0,i.yg)("p",null,"When ",(0,i.yg)("inlineCode",{parentName:"p"},"onSubmit")," is called a few things happen under the hood:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"The form is in the ",(0,i.yg)("inlineCode",{parentName:"li"},"isSubmitting")," state. This means all your components are disabled, and if your ",(0,i.yg)("inlineCode",{parentName:"li"},"submit")," component allows it, it will be in a ",(0,i.yg)("em",{parentName:"li"},"loading state"),". You have nothing to manage here."),(0,i.yg)("li",{parentName:"ul"},"When everything goes well, you can return a JSON object that contain the ",(0,i.yg)("inlineCode",{parentName:"li"},"message")," field to notify the user the operation succeeded."),(0,i.yg)("li",{parentName:"ul"},"In case of an error, simply throw the error. Formulaik will catch it and notify the user accordingly.")),(0,i.yg)("h2",{id:"putting-it-all-together"},"Putting it all together"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"import Formulaik from '@formulaik/react'\nimport FormulaikMui from '@formulaik-community/react-mui'\n\nconst inputs = [\n  {\n    component: 'input',\n    id: 'email',\n    label: 'Email',\n    type: \"string\",\n    params: {  \n      placeholder: \"email@domain.com\"\n    },\n    validations: [\n      {\n        kind: \"format\",\n        value: \"email\",\n        message: 'Invalid email format',\n      },\n      {\n        kind: \"required\",\n        value: true,\n        message: \"This field can't be blank\",\n      },\n    ],\n  },\n  {\n    component: 'inputPassword',\n    label: 'Password',\n    id: 'password',\n    type: \"string\",\n    params: {\n      autoComplete: \"current-password\",\n      placeholder: \"xxxx-xxxx-xxxx\"\n    },\n    validations: [\n      {\n        kind: \"required\",\n        value: true,\n        message: \"This field can't be blank\",\n      },\n      {\n        kind: \"matches\",\n        value: /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/,\n        message: 'Invalid password, must contain at least 8 characters and at most 18 characters',\n      },\n    ]\n  },\n  {\n      component: 'checkbox',  \n      id: 'rememberMe',\n      type: \"boolean\",\n      params: {\n          label: 'Remember me',\n      }\n  },\n  {\n    component: 'submit',\n    id: 'submit',\n    params: {\n      text: 'Continue'\n    }\n  },]\n  \nexport default (props) => {\n const onSubmit = async (values) => {\n    const { email, password } = values\n    try { \n      await myapi.submit({ email, password })\n    }\n    catch(e) {\n      throw (new Error('Could not sign in: ', e.message))\n    }\n    return { message: t(\"Email validated\") }  \n  }\n\n  const values = {\n    email: \"\",\n    password: \"\",\n    rememberMe: false,\n  }\n\n  return <>  \n      <h3>Login</h3>  \n      <Formulaik\n        components={[FormulaikMui]}\n        values={values}  \n        inputs={inputs}\n        onSubmit={onSubmit}\n         />  \n    </>\n}\n")),(0,i.yg)("p",null,"We give a few props to the ",(0,i.yg)("inlineCode",{parentName:"p"},"Formulaik")," component:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"components={[FormulaikMui]}"),": a list of component libraries to pick the input components from"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"values={values}"),":  Formulaik the default values"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"inputs={inputs}"),": the inputs list"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"onSubmit={onSubmit}"),": the submission handler")),(0,i.yg)("p",null,"Voil\xe0."),(0,i.yg)("h2",{id:"screenshots"},"Screenshots"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null}),(0,i.yg)("th",{parentName:"tr",align:null}))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("img",{src:a(7224).A,width:"698",height:"760"})),(0,i.yg)("td",{parentName:"tr",align:null},"Email validation failed")))))}g.isMDXComponent=!0},9943:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/20241009_200912_image-0c3c4dcb27b957c5393328595d6b2b8f.png"},7224:(e,n,a)=>{a.d(n,{A:()=>t});const t=a.p+"assets/images/20241009_201211_image-c309fc9c66e5969bca55f96725e92ecf.png"}}]);